-#include<stdio.h>
#define N 10
void pointer(int (*maze1)[N],int i,int j,int k);//运用指针
int l=0,k=0;
int q[2][100]={0};
int main()
{
	int	maze[N][N]={{2,3,2,2,2,2,2,2,2,2},
					{2,0,0,0,0,0,2,0,0,2},
					{2,0,2,0,2,0,0,0,0,2},
				  	{2,0,0,2,0,2,0,0,0,2}, 
					{2,2,0,2,0,2,0,2,0,2},
					{2,0,0,0,0,0,0,0,0,2},
				    {2,2,2,0,2,2,0,2,0,2},
				    {2,2,2,0,2,2,0,0,0,2},
			    	{2,2,0,2,2,2,0,0,0,2},
					{2,2,2,2,2,2,2,2,4,2}};//第一个迷宫
	int maze1[N][N]={{2,3,2,2,2,2,2,2,2,2},
					{2,0,0,2,0,0,0,0,0,2},
					{2,2,0,2,0,2,2,2,0,2},
					{2,0,0,2,0,0,0,2,0,2},
					{2,0,2,2,0,2,0,2,0,2},
					{2,0,0,2,0,0,0,2,0,2},
					{2,2,0,2,0,0,2,0,0,2},
					{2,0,0,0,0,0,2,0,2,2},
					{2,0,2,0,2,0,2,0,0,2},
					{2,2,2,2,2,2,2,2,4,2}};//第二个迷宫
	int i=0,j=1,a,b,m,l=0;
	printf("(1)\n");
	for(a=0;a<N;a++)//输出迷宫(1)
	{
		for(b=0;b<N;b++)
		{
			if(maze[a][b]==2)//迷宫墙壁
				printf("■");
			else if(maze[a][b]==3)
				printf("↓");//迷宫入口
			else if(maze[a][b]==4)
				printf("※");//迷宫出口
			else  printf("  ");//迷宫道路
		}
		printf("\n");
	}
	printf("(2)\n");
	for(i=0;i<10;i++) //输出迷宫(2)
	{
	    for(j=0;j<10;j++)
		{
		    if(*(*(maze1+i)+j)==2)
			    printf("■"); //迷宫墙壁
			if(*(*(maze1+i)+j)==0)
			    printf("  ");//迷宫道路
			if(*(*(maze1+i)+j)==3)
			    printf("↓");//迷宫入口
			if(*(*(maze1+i)+j)==4)
			    printf("※");//迷宫出口
		}
        printf("\n");
	}
	printf("Choose a maze(1 or 2):");//选择你要走的一个迷宫
	scanf("%d",&m);
//	if(m=1)                      //只能输出第一个迷宫的路径 如果想输出第二个迷宫的路径 请把if语句注释掉
//		pointer(maze,1,1,0); //如果要输出第二个迷宫的路径 请注释掉此行
//	else if(m==2)               //如果要输出第二个迷宫的路径 请注释掉此行
		pointer(maze1,1,1,0);
	return 0;
}
void pointer(int (*maze1)[N],int i,int j,int k)//k表示走的步数，l表示有几条路径
{
	int x,y;
	*(*(maze1+i)+j)=1;//将走过的路标记为1
	q[0][k]=i;//i表示横坐标，[0]表示横坐标所存的位置，[k]表示每一步路径
	q[1][k]=j;//j表示纵坐标，[1]表示纵坐标所存的位置
	k++;
		if(i==8&&j==8)//（8，8）是出口上方的坐标
		{
			for(x=0;x<10;x++)//输出迷宫及其所走路线
			{
				for(y=0;y<10;y++)
				{
					if(*(*(maze1+x)+y)==2)
						printf("■"); //迷宫墙壁
					else if(*(*(maze1+x)+y)==0)
						printf("  ");//迷宫道路
						else if(*(*(maze1+x)+y)==3)
							printf("↓");//迷宫入口
							else if(*(*(maze1+x)+y)==4)
								printf("※");//迷宫出口
								else if(*(*(maze1+x)+y)==1)
									printf("·");//迷宫路径
				}
				printf("\n");
			}
			printf("\n");
			printf("(0,1)→");//入口坐标
		for(x=0;x<k;x++)
			{
				printf("(%d,%d)→",*(*(q+0)+x),*(*(q+1)+x));//输出坐标
			}
			printf("(9,8)\n");//出口坐标
			printf("\n");
		}
		if((*(*(maze1+(i+1))+j)==0)&&i<9)//判断是否能向上走
			 pointer(maze1,i+1,j,k);
		if((*(*(maze1+i)+(j+1))==0)&&j<9)//判断是否能向右走
			pointer(maze1,i,j+1,k);
		if((*(*(maze1+(i-1))+j)==0)&&i>0)//判断是否能向下走
			pointer(maze1,i-1,j,k);
		if((*(*(maze1+i)+(j-1))==0)&&j>0)//判断是否能向左走
			pointer(maze1,i,j-1,k);
		
	k--;//如果不满足上述if，则k返回增加前的值，退回上一步，寻找另外路径
	*(*(maze1+i)+j)=0;
	q[0][k]=0;
	q[1][k]=0;
}
